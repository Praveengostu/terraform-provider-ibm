// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.ibm.com/Bluemix/riaas-go-client/riaas/models"
)

// PatchSubnetsIDReader is a Reader for the PatchSubnetsID structure.
type PatchSubnetsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchSubnetsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchSubnetsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchSubnetsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchSubnetsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchSubnetsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchSubnetsIDOK creates a PatchSubnetsIDOK with default headers values
func NewPatchSubnetsIDOK() *PatchSubnetsIDOK {
	return &PatchSubnetsIDOK{}
}

/*PatchSubnetsIDOK handles this case with default header values.

dummy
*/
type PatchSubnetsIDOK struct {
	Payload *models.Subnet
}

func (o *PatchSubnetsIDOK) Error() string {
	return fmt.Sprintf("[PATCH /subnets/{id}][%d] patchSubnetsIdOK  %+v", 200, o.Payload)
}

func (o *PatchSubnetsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Subnet)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSubnetsIDBadRequest creates a PatchSubnetsIDBadRequest with default headers values
func NewPatchSubnetsIDBadRequest() *PatchSubnetsIDBadRequest {
	return &PatchSubnetsIDBadRequest{}
}

/*PatchSubnetsIDBadRequest handles this case with default header values.

error
*/
type PatchSubnetsIDBadRequest struct {
	Payload *models.Riaaserror
}

func (o *PatchSubnetsIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /subnets/{id}][%d] patchSubnetsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PatchSubnetsIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSubnetsIDNotFound creates a PatchSubnetsIDNotFound with default headers values
func NewPatchSubnetsIDNotFound() *PatchSubnetsIDNotFound {
	return &PatchSubnetsIDNotFound{}
}

/*PatchSubnetsIDNotFound handles this case with default header values.

error
*/
type PatchSubnetsIDNotFound struct {
	Payload *models.Riaaserror
}

func (o *PatchSubnetsIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /subnets/{id}][%d] patchSubnetsIdNotFound  %+v", 404, o.Payload)
}

func (o *PatchSubnetsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSubnetsIDInternalServerError creates a PatchSubnetsIDInternalServerError with default headers values
func NewPatchSubnetsIDInternalServerError() *PatchSubnetsIDInternalServerError {
	return &PatchSubnetsIDInternalServerError{}
}

/*PatchSubnetsIDInternalServerError handles this case with default header values.

error
*/
type PatchSubnetsIDInternalServerError struct {
	Payload *models.Riaaserror
}

func (o *PatchSubnetsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /subnets/{id}][%d] patchSubnetsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchSubnetsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Riaaserror)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
