// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListenerPolicyTemplate listener policy template
// swagger:model ListenerPolicyTemplate
type ListenerPolicyTemplate struct {

	// The policy action.
	// Enum: [forward redirect reject]
	Action string `json:"action,omitempty"`

	// The unique user-defined name for this policy
	Name string `json:"name,omitempty"`

	// Priority of the policy. Lower value indicates higher priority.
	Priority int64 `json:"priority,omitempty"`

	// The list of rules of this policy
	Rules []*ListenerPolicyRuleTemplate `json:"rules"`

	// target
	Target *ListenerPolicyTemplateTarget `json:"target,omitempty"`
}

// Validate validates this listener policy template
func (m *ListenerPolicyTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var listenerPolicyTemplateTypeActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["forward","redirect","reject"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listenerPolicyTemplateTypeActionPropEnum = append(listenerPolicyTemplateTypeActionPropEnum, v)
	}
}

const (

	// ListenerPolicyTemplateActionForward captures enum value "forward"
	ListenerPolicyTemplateActionForward string = "forward"

	// ListenerPolicyTemplateActionRedirect captures enum value "redirect"
	ListenerPolicyTemplateActionRedirect string = "redirect"

	// ListenerPolicyTemplateActionReject captures enum value "reject"
	ListenerPolicyTemplateActionReject string = "reject"
)

// prop value enum
func (m *ListenerPolicyTemplate) validateActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, listenerPolicyTemplateTypeActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ListenerPolicyTemplate) validateAction(formats strfmt.Registry) error {

	if swag.IsZero(m.Action) { // not required
		return nil
	}

	// value enum
	if err := m.validateActionEnum("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}

func (m *ListenerPolicyTemplate) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(m.Rules) { // not required
		return nil
	}

	for i := 0; i < len(m.Rules); i++ {
		if swag.IsZero(m.Rules[i]) { // not required
			continue
		}

		if m.Rules[i] != nil {
			if err := m.Rules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *ListenerPolicyTemplate) validateTarget(formats strfmt.Registry) error {

	if swag.IsZero(m.Target) { // not required
		return nil
	}

	if m.Target != nil {
		if err := m.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListenerPolicyTemplate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListenerPolicyTemplate) UnmarshalBinary(b []byte) error {
	var res ListenerPolicyTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
